include:
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/default.default.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/default.rules.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/default.scripts.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/default.variables.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/default.workflow.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/build.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/test.windows.yml
  - project: reductech/templates/cicd/dotnet
    file: .gitlab/ci/quality.yml

default:
  image: mcr.microsoft.com/dotnet/sdk:5.0-windowsservercore-ltsc2019
  tags:
    - rt-windows

stages:
  - build
  - test
  - quality
  - package
  - package-test
  - sign

variables:
  PACKAGE_NAME_EXE: Reductech.EDR

.exe_artifacts_default:
  artifacts:
    name: '$PACKAGE_NAME_EXE-$PROJECT_VERSION'
    paths:
      - appsettings.json
      - CHANGELOG.md
      - EDR.exe
      - LICENSE
      - nuixconnectorscript.rb
      - README.md

package exe dev:
  stage: package
  extends:
    - .rules_dev_manual
    - .exe_artifacts_default
  needs:
    - build dev
    - test dev
    - version check dev
  script:
    - dotnet publish --no-restore --configuration $CONFIG_DEV --version-suffix $VERSION_SUFFIX
      -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --output ./
  artifacts:
    expire_in: 3 months

package exe release:
  stage: package
  extends:
    - .rules_release
    - .exe_artifacts_default
  needs:
    - build release
    - test release
    - version check release
  script:
    - dotnet publish --no-restore --configuration $CONFIG_RELEASE
      -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --output ./
  artifacts:
    expire_in: 2 hours

# Test the package
test package exe dev:
  stage: package-test
  tags:
    - nuix
  cache: {}
  extends:
    - .rules_dev_manual
  needs:
    - package exe dev
  script:
    - EDR.exe -p .\Examples\core-sequence.scl
    - EDR.exe -p .\Examples\nuix-sequence.scl
    - EDR.exe -p .\Examples\pwsh-sequence.scl

test package exe release:
  extends:
    - test package dev
    - .rules_release
  needs:
    - package exe release

sign exe release:
  stage: sign
  image: registry.gitlab.com/reductech/containers/codesigning
  cache: {}
  extends:
    - .rules_release
    - .exe_artifacts_default
  needs:
    - version check release
    - package exe release
    - test package release
  variables:
    TIMESTAMP_SERVER: http://timestamp.sectigo.com
    ALGO_FILE_DIGEST: SHA256
    ALGO_TIME_DIGEST: SHA256
  script:
    - signtool.exe sign /f $RT_CERT_PATH /p $RT_CERT_PASS /fd $ALGO_FILE_DIGEST
      /tr $TIMESTAMP_SERVER /td $ALGO_TIME_DIGEST .\EDR.exe
  artifacts:
    expire_in: never

# Temporary release that doesn't use single-file publish to include the
# powershell connector (see reductech/edr/connectors/pwsh#5)
.exe_artifacts_pwsh:
  artifacts:
    name: '$PACKAGE_NAME_EXE-$PROJECT_VERSION-Win10x64'
    paths:
      - bin/
      - CHANGELOG.md
      - LICENSE
      - README.md

package pwsh dev:
  stage: package
  extends:
    - .default_before_script
    - .rules_dev_manual
    - .exe_artifacts_pwsh
  needs:
    - test dev
    - version check dev
  variables:
    NUGET_PROJECT_ID: $NUGET_PROJECT_ID_DEV
    NUGET_USERNAME: $NUGET_USER_DEV
    NUGET_TOKEN: $NUGET_TOKEN_DEV
  script:
    - dotnet restore --runtime win10-x64 -p:DefineConstants=INCLUDE_PWSH
    - dotnet publish --no-restore --configuration $CONFIG_DEV --version-suffix $VERSION_SUFFIX
      --runtime win10-x64 -p:DefineConstants=INCLUDE_PWSH --output ./bin
  artifacts:
    expire_in: 3 months

package pwsh release:
  stage: package
  extends:
    - .default_before_script
    - .rules_release
    - .exe_artifacts_pwsh
  needs:
    - test release
    - version check release
  variables:
    NUGET_PROJECT_ID: $NUGET_PROJECT_ID_RELEASE
    NUGET_USERNAME: $NUGET_USER_PROD
    NUGET_TOKEN: $NUGET_TOKEN_PROD
  script:
    - dotnet restore --runtime win10-x64 -p:DefineConstants=INCLUDE_PWSH
    - dotnet publish --no-restore --configuration $CONFIG_RELEASE
      --runtime win10-x64 -p:DefineConstants=INCLUDE_PWSH --output ./bin
  artifacts:
    expire_in: 2 hours

# Test the pwsh package
test package pwsh dev:
  extends:
    - test package dev
    - .rules_dev_manual
  needs:
    - package pwsh dev

test package pwsh release:
  extends:
    - test package dev
    - .rules_release
  needs:
    - package pwsh release

sign pwsh release:
  extends:
    - sign exe release
    - .exe_artifacts_pwsh
  needs:
    - version check release
    - package pwsh release
    - test package pwsh release
  script:
    - signtool.exe sign /f $RT_CERT_PATH /p $RT_CERT_PASS /fd $ALGO_FILE_DIGEST
      /tr $TIMESTAMP_SERVER /td $ALGO_TIME_DIGEST .\bin\EDR.exe

code_quality:
  tags:
    - rt-dind

mutation testing:
  rules:
    - when: never
